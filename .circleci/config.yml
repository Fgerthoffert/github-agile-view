# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.11.4-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          name : Restore NPM Cache
          key: npm-cache-{{ checksum "package.json" }}

      - run:
          name: Download and install meteor
          command: curl https://install.meteor.com | /bin/sh

      #- run:
      #    name: Create Settings File
      #    command: echo $METEOR_SETTINGS > settings.json

      - run:
          name: Install npm dependencies
          command: meteor npm install

      - save_cache:
          name: Save NPM Cache
          key: npm-cache-{{ checksum "package.json" }}
          paths:
            - 'node_modules'

      - run:
          name: Run Linting
          command: meteor npm run lint --silent

      - save_cache:
          key: packages-cache-{{ checksum ".meteor/versions" }}
          paths:
            - './.meteor/local/build'
            - './.meteor/local/bundler-cache'
            - './.meteor/local/isopacks'
            - './.meteor/local/plugin-cache'

  deploy:
      machine:
        enabled: true
      steps:
        - run:
            name: SSH - Clone Repo locally
            command: |
              ssh $SSH_USER@$SSH_HOST "rm GitHub/ -R; mkdir ~/GitHub; cd ~/GitHub; git clone https://github.com/Fgerthoffert/zencrepes.git"

        - run:
            name: SSH - Build Docker image
            command: |
              ssh $SSH_USER@$SSH_HOST "cd ~/GitHub/zencrepes/; docker build -t fgerthoffer/zencrepes ."

        - run:
            name: SSH - Run docker-compose up
            command: |
              ssh $SSH_USER@$SSH_HOST "export METEOR_SETTINGS=$METEOR_SETTINGS_PROD; docker-compose up -d"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master